import { Prisma } from '../../generated/prisma';
interface SearchParams {
    search?: string;
    category?: string;
    ageMin?: number;
    ageMax?: number;
    costMin?: number;
    costMax?: number;
    startDate?: Date;
    endDate?: Date;
    dayOfWeek?: string[];
    location?: string;
    providerId?: string;
    limit?: number;
    offset?: number;
    sortBy?: 'cost' | 'dateStart' | 'name' | 'createdAt';
    sortOrder?: 'asc' | 'desc';
    includeInactive?: boolean;
}
export declare class EnhancedActivityService {
    private prisma;
    constructor();
    private getActivitySelect;
    searchActivities(params: SearchParams): Promise<{
        activities: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            _count: {
                favorites: number;
            };
            isActive: boolean;
            providerId: string;
            externalId: string;
            category: string;
            subcategory: string;
            description: string;
            schedule: string;
            dateStart: Date;
            dateEnd: Date;
            registrationDate: Date;
            ageMin: number;
            ageMax: number;
            cost: number;
            spotsAvailable: number;
            totalSpots: number;
            locationId: string;
            locationName: string;
            registrationUrl: string;
            courseId: string;
            lastSeenAt: Date;
            rawData: Prisma.JsonValue;
            dayOfWeek: string[];
            registrationStatus: string;
            registrationButtonText: string;
            detailUrl: string;
            fullDescription: string;
            instructor: string;
            prerequisites: string;
            whatToBring: string;
            fullAddress: string;
            latitude: number;
            longitude: number;
            directRegistrationUrl: string;
            contactInfo: string;
            provider: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                isActive: boolean;
                website: string;
                scraperConfig: Prisma.JsonValue;
            };
            location: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                latitude: number | null;
                longitude: number | null;
                address: string;
                city: string;
                province: string;
                postalCode: string | null;
                country: string;
                facility: string | null;
            };
        }[];
        pagination: {
            total: number;
            limit: number;
            offset: number;
            pages: number;
        };
    }>;
    getActivityById(id: string): Promise<{
        name: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        _count: {
            favorites: number;
        };
        isActive: boolean;
        providerId: string;
        externalId: string;
        category: string;
        subcategory: string;
        description: string;
        schedule: string;
        dateStart: Date;
        dateEnd: Date;
        registrationDate: Date;
        ageMin: number;
        ageMax: number;
        cost: number;
        spotsAvailable: number;
        totalSpots: number;
        locationId: string;
        locationName: string;
        registrationUrl: string;
        courseId: string;
        lastSeenAt: Date;
        rawData: Prisma.JsonValue;
        dayOfWeek: string[];
        registrationStatus: string;
        registrationButtonText: string;
        detailUrl: string;
        fullDescription: string;
        instructor: string;
        prerequisites: string;
        whatToBring: string;
        fullAddress: string;
        latitude: number;
        longitude: number;
        directRegistrationUrl: string;
        contactInfo: string;
        provider: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isActive: boolean;
            website: string;
            scraperConfig: Prisma.JsonValue;
        };
        location: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            latitude: number | null;
            longitude: number | null;
            address: string;
            city: string;
            province: string;
            postalCode: string | null;
            country: string;
            facility: string | null;
        };
    }>;
    getUpcomingActivities(params?: {
        daysAhead?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        activities: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            _count: {
                favorites: number;
            };
            isActive: boolean;
            providerId: string;
            externalId: string;
            category: string;
            subcategory: string;
            description: string;
            schedule: string;
            dateStart: Date;
            dateEnd: Date;
            registrationDate: Date;
            ageMin: number;
            ageMax: number;
            cost: number;
            spotsAvailable: number;
            totalSpots: number;
            locationId: string;
            locationName: string;
            registrationUrl: string;
            courseId: string;
            lastSeenAt: Date;
            rawData: Prisma.JsonValue;
            dayOfWeek: string[];
            registrationStatus: string;
            registrationButtonText: string;
            detailUrl: string;
            fullDescription: string;
            instructor: string;
            prerequisites: string;
            whatToBring: string;
            fullAddress: string;
            latitude: number;
            longitude: number;
            directRegistrationUrl: string;
            contactInfo: string;
            provider: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                isActive: boolean;
                website: string;
                scraperConfig: Prisma.JsonValue;
            };
            location: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                latitude: number | null;
                longitude: number | null;
                address: string;
                city: string;
                province: string;
                postalCode: string | null;
                country: string;
                facility: string | null;
            };
        }[];
        pagination: {
            total: number;
            limit: number;
            offset: number;
            pages: number;
        };
    }>;
    getActivitiesByCategory(): Promise<any>;
    getActivityStatusCounts(): Promise<{
        open: number;
        waitlist: number;
        closed: number;
        total: number;
    }>;
    toggleFavorite(activityId: string, userId: string): Promise<{
        added: boolean;
    }>;
    getUserFavorites(userId: string, params?: SearchParams): Promise<{
        activities: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            _count: {
                favorites: number;
            };
            isActive: boolean;
            providerId: string;
            externalId: string;
            category: string;
            subcategory: string;
            description: string;
            schedule: string;
            dateStart: Date;
            dateEnd: Date;
            registrationDate: Date;
            ageMin: number;
            ageMax: number;
            cost: number;
            spotsAvailable: number;
            totalSpots: number;
            locationId: string;
            locationName: string;
            registrationUrl: string;
            courseId: string;
            lastSeenAt: Date;
            rawData: Prisma.JsonValue;
            dayOfWeek: string[];
            registrationStatus: string;
            registrationButtonText: string;
            detailUrl: string;
            fullDescription: string;
            instructor: string;
            prerequisites: string;
            whatToBring: string;
            fullAddress: string;
            latitude: number;
            longitude: number;
            directRegistrationUrl: string;
            contactInfo: string;
            provider: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                isActive: boolean;
                website: string;
                scraperConfig: Prisma.JsonValue;
            };
            location: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                latitude: number | null;
                longitude: number | null;
                address: string;
                city: string;
                province: string;
                postalCode: string | null;
                country: string;
                facility: string | null;
            };
        }[];
        pagination: {
            total: number;
            limit: number;
            offset: number;
            pages: number;
        };
    }>;
    private buildWhereClause;
}
export {};
//# sourceMappingURL=activityService.enhanced.updated.d.ts.map